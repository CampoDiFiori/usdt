//! Print the expanded form of the autogenerated FFI glue to expose USDT probes in Rust.

use std::path::PathBuf;

use structopt::StructOpt;
use dtrace_parser::parser::File;

/// Print autogenerated FFI glue to link Rust to DTrace
#[derive(StructOpt)]
struct Options {
    /// The type of formatted output to emit. Options are "rust" to emit the Rust struct and
    /// method definitions, "decl" for the declarations of C FFI functions to be called from
    /// Rust, and "defn" for the actual implementation of those C FFI functions.
    #[structopt(short, long, default_value = "rust", possible_values = &["rust", "decl", "defn"])]
    format: String,

    /// The source D file to be parsed.
    #[structopt(parse(from_str))]
    source: PathBuf,
}

fn main() {
    let options = Options::from_args();
    let file = File::from_file(&options.source).unwrap();
    println!(
        "{}",
        match options.format.as_str() {
            "rust" => file.to_rust_impl(),
            "decl" => file.to_c_declaration(),
            "defn" => file.to_c_definition(),
            _ => unreachable!(),
        }
    );
}
